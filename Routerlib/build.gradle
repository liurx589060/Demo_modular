apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true

            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.3.1'
}

def SDK_BASENAME = "router"
def SDK_VERSION = "1.0.0"
def sdkDestinationPath = "./release"

def artifactId = "router"
def groupId = "com.lrx.router.lib"

//task to delete the old jar
task deleteOldJar(type: Delete) {
    delete sdkDestinationPath + "/" + SDK_BASENAME + "_" + SDK_VERSION + ".jar"
}

//task to export contents as jar
task exportJar(type: Copy) {
    from('build/intermediates/bundles/default/')
    into(sdkDestinationPath)
    include('classes.jar')
    ///Rename the jar
    rename('classes.jar', SDK_BASENAME + "_" + SDK_VERSION + ".jar")
}

exportJar.dependsOn(deleteOldJar, build)

//上传到maven
uploadArchives {
    repositories.mavenDeployer{
        name='mavenCentralReleaseDeployer'
        repository(url:"http://localhost:8081/nexus/content/repositories/lrxRepo/")
                {
                    authentication(userName:"sy01",password:"123456")
                }
        pom.version  = SDK_VERSION
        pom.artifactId = artifactId
        pom.groupId = groupId
        pom.name = artifactId + "_lib"
        pom.packaging = "aar"
    }
}
