apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile project(':Routerlib')
    compile 'com.lrx.router.lib:router:1.0.0'
}

def SDK_BASENAME = "extra"
def SDK_VERSION = "1.0.0"
def sdkDestinationPath = "./release"
def zipFile = file('build/intermediates/bundles/default/classes.jar')
def zipFile2 = file('../RouterLib/release/router_1.0.0.jar')

//task to delete the old jar
task deleteOldJar(type: Delete) {
    delete sdkDestinationPath + "/" + SDK_BASENAME + "_" + SDK_VERSION + ".jar"
}

//task to export contents as jar
task exportJar(type: Jar) {
    from zipTree(zipFile)
    from zipTree(zipFile2)
    baseName = SDK_BASENAME + "_" + SDK_VERSION
    destinationDir = file(sdkDestinationPath)
}

exportJar.dependsOn(deleteOldJar, build)
